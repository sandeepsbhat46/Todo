{"version":3,"sources":["logo.svg","component/ListItem.js","component/Todo.js","App.js","reportWebVitals.js","index.js"],"names":["ListItem","props","listitems","items","map","item","className","type","id","key","value","text","onChange","e","setUpdate","target","Todo","addItem","preventDefault","newItem","state","currentItem","setState","handleInput","Date","now","bind","deleteItem","filteredItems","this","filter","console","log","onSubmit","placeholder","Component","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"oPAAe,I,4DC6BAA,MAvBf,SAAkBC,GACd,IACMC,EADMD,EAAME,MACIC,KAAI,SAAAC,GACtB,OACI,qBAAKC,UAAU,OAAf,SACI,4BACI,uBAAOC,KAAK,OAAOC,GAAIH,EAAKI,IAAKC,MAAOL,EAAKM,KAAMC,SAAU,SAACC,GAC1DZ,EAAMa,UAAUD,EAAEE,OAAOL,MAAOL,EAAKI,WAHtBJ,EAAKI,QAexC,OAAO,8BACUP,KCwDNc,G,wDA7EX,WAAYf,GAAO,IAAD,8BACd,cAAMA,IAaVgB,QAAQ,SAACJ,GACLA,EAAEK,iBACF,IAAMC,EAAQ,EAAKC,MAAMC,YACzB,GAAmB,KAAhBF,EAAQR,KAAW,CAClB,IAAMR,EAAM,GAAD,mBAAK,EAAKiB,MAAMjB,OAAhB,CAAuBgB,IAClC,EAAKG,SAAS,CACVnB,MAAMA,EACNkB,YAAY,CACRV,KAAK,GACLF,IAAI,QAvBF,EA6BlBc,YAAY,SAACV,GACT,EAAKS,SAAS,CACVD,YAAY,CACRV,KAAKE,EAAEE,OAAOL,MACdD,IAAIe,KAAKC,UA/BjB,EAAKL,MAAM,CACPjB,MAAM,GACNkB,YAAY,CACRV,KAAK,GACLF,IAAI,KAGZ,EAAKQ,QAAQ,EAAKA,QAAQS,KAAb,gBACb,EAAKH,YAAY,EAAKA,YAAYG,KAAjB,gBACjB,EAAKC,WAAa,EAAKA,WAAWD,KAAhB,gBAClB,EAAKZ,UAAY,EAAKA,UAAUY,KAAf,gBAZH,E,uDAsCPjB,GACP,IAAMmB,EAAeC,KAAKT,MAAMjB,MAAM2B,QAAO,SAAAzB,GAAI,OAC/CA,EAAKI,MAAMA,KACboB,KAAKP,SAAS,CACZnB,MAAOyB,M,gCAIDjB,EAAKF,GACbsB,QAAQC,IAAI,SAASH,KAAKT,MAAMjB,OAChC,IAAMA,EAAQ0B,KAAKT,MAAMjB,MACzBA,EAAMC,KAAI,SAAAC,GACLA,EAAKI,MAAMA,IACZsB,QAAQC,IAAI3B,EAAKI,IAAK,OAAOA,GAC7BJ,EAAKM,KAAMA,MAGfkB,KAAKP,SAAS,CACZnB,MAAOA,M,+BAOT,OACI,qBAAKG,UAAU,MAAf,SACI,mCACI,uBAAME,GAAG,aAAayB,SAAUJ,KAAKZ,QAArC,UACI,uBAAOV,KAAK,OAAO2B,YAAY,eAAgBxB,MAAOmB,KAAKT,MAAMC,YAAYV,KAAMC,SAAUiB,KAAKN,cAClG,wBAAQhB,KAAK,SAAb,oBAEJ,8BAAIsB,KAAKT,MAAMjB,MAAMQ,KAArB,OACI,cAAC,EAAD,CAAUR,MAAO0B,KAAKT,MAAMjB,MAAOwB,WAAYE,KAAKF,WAAYb,UAAWe,KAAKf,qB,GAxErFqB,cCQJC,MARf,WACE,OACE,qBAAK9B,UAAU,MAAf,SACE,cAAC,EAAD,OCKS+B,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.3d437ac0.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React from 'react'\r\nimport './listitem.css'\r\nimport { FontAwesomeIcon } from '@fortawesome/fontawesome-free'\r\n\r\n\r\n\r\nfunction ListItem(props){\r\n    const items=props.items\r\n    const listitems=items.map(item=>{\r\n        return(\r\n            <div className='list' key={item.key}>\r\n                <p>\r\n                    <input type='text' id={item.key} value={item.text} onChange={(e)=>{\r\n                        props.setUpdate(e.target.value, item.key)\r\n                    }}/>\r\n                   {/* <span>\r\n       \r\n                    <FontAwesomeIcon className=\"faicons\" onClick={() => {\r\n                        props.deleteItem(item.key)\r\n                    }} icon=\"trash\" />\r\n                </span> */}\r\n                </p>\r\n            </div>\r\n        )\r\n    })\r\n    return <div>\r\n                    {listitems }\r\n        </div>\r\n}\r\nexport default ListItem","import React,{Component} from 'react'\r\nimport ListItem from './ListItem'\r\nimport './todo.css'\r\n\r\nclass Todo extends Component{\r\n    constructor(props){\r\n        super(props)\r\n        this.state={\r\n            items:[],\r\n            currentItem:{\r\n                text:'',\r\n                key:''\r\n            }\r\n        }\r\n        this.addItem=this.addItem.bind(this)\r\n        this.handleInput=this.handleInput.bind(this)\r\n        this.deleteItem = this.deleteItem.bind(this);\r\n        this.setUpdate = this.setUpdate.bind(this);\r\n    }\r\n    addItem=(e)=>{\r\n        e.preventDefault()\r\n        const newItem=this.state.currentItem;\r\n        if(newItem.text !==''){\r\n            const items=[...this.state.items, newItem];\r\n            this.setState({\r\n                items:items,\r\n                currentItem:{\r\n                    text:'',\r\n                    key:''\r\n                }\r\n            })\r\n        }\r\n    }\r\n\r\n    handleInput=(e)=>{\r\n        this.setState({\r\n            currentItem:{\r\n                text:e.target.value,\r\n                key:Date.now()\r\n            }\r\n        })\r\n    }\r\n    \r\n    deleteItem(key){\r\n        const filteredItems= this.state.items.filter(item =>\r\n          item.key!==key);\r\n        this.setState({\r\n          items: filteredItems\r\n        })\r\n    \r\n      }\r\n      setUpdate(text,key){\r\n        console.log(\"items:\"+this.state.items);\r\n        const items = this.state.items;\r\n        items.map(item=>{      \r\n          if(item.key===key){\r\n            console.log(item.key +\"    \"+key)\r\n            item.text= text;\r\n          }\r\n        })\r\n        this.setState({\r\n          items: items\r\n        })\r\n        \r\n       \r\n      }\r\n    \r\n    render(){\r\n        return(\r\n            <div className='App'>\r\n                <header>\r\n                    <form id='to-do-form' onSubmit={this.addItem}>\r\n                        <input type='text' placeholder='Enter a text'  value={this.state.currentItem.text} onChange={this.handleInput} />\r\n                        <button type='submit'>Add</button>\r\n                    </form>\r\n                    <p>{this.state.items.text} </p>\r\n                        <ListItem items={this.state.items} deleteItem={this.deleteItem} setUpdate={this.setUpdate}></ListItem>\r\n                </header>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default Todo","import logo from './logo.svg';\nimport './App.css';\nimport Todo from './component/Todo';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Todo />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}